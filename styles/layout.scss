$spaces: ( 
  0: 0,
  px: 1px,
  1: 0.25rem, /* 4px */
  2: 0.5rem, /* 8px */
  3: 0.75rem, /* 12px */
  4: 1rem, /* 16px */
  5: 1.25rem, /* 20px */
  6: 1.5rem, /* 24px */
  7: 1.75rem, /* 28px */
  8: 2rem, /* 32px */
  9: 2.25rem, /* 36px */
  10: 2.5rem, /* 40px */
  11: 2.75rem, /* 44px */
  12: 3rem, /* 48px */
  14: 3.5rem, /* 56px */
  16: 4rem, /* 64px */
  20: 5rem, /* 80px */
  24: 6rem, /* 96px */
  28: 7rem, /* 112px */
  32: 8rem, /* 128px */
  36: 9rem, /* 144px */
  40: 10rem, /* 160px */
  44: 11rem, /* 176px */
  48: 12rem, /* 192px */
  52: 13rem, /* 208px */
  56: 14rem, /* 224px */
  60: 15rem, /* 240px */
  64: 16rem, /* 256px */
  72: 18rem, /* 288px */
  80: 20rem, /* 320px */
  96: 24rem, /* 384px */
  auto: auto,
  full: 100%,
  screen: 100vw,
  min: min-content,
  max: max-content,
  fit: fit-content,
);

$rounded-sm: 0.125rem; /* 2px */
$rounded: 0.25rem; /* 4px */
$rounded-md: 0.375rem; /* 6px */
$rounded-lg: 0.5rem; /* 8px */
$rounded-xl: 0.75rem; /* 12px */
$rounded-2xl: 1rem; /* 16px */
$rounded-3xl: 1.5rem; /* 24px */
$rounded-full: 9999px;

$sm: 40em;      // (min-width: 640px)
$md: 48em;      // (min-width: 768px)
$lg: 64em;      // (min-width: 1024px)
$xl: 80em;      // (min-width: 1280px)

$breakpoints: (
  sm: $sm,
  md: $md,
  lg: $lg,
  xl: $xl
);

@mixin modifiers($map, $attribute, $prefix: '-', $separator: '-', $base: 'base') {
  @each $key, $value in $map {
    &#{if($key != $base, #{$prefix}#{$key}, '')} {
      @if type-of($value) == 'map' {
        @include modifiers($value, $attribute, $separator);
      }
      @else {
        #{$attribute}: $value;
      }
    }
  }
}

.p {
  @include modifiers($spaces, 'padding', 'p', $separator: '-');
}

.m {
  @include modifiers($spaces, 'margin', 'm', $separator: '-');
}

.w {
  @include modifiers($spaces, 'width', 'w', $separator: '-');
}

.h {
  @include modifiers($spaces, 'height', 'h', $separator: '-');
}

.min-w {
  @include modifiers($spaces, 'min-width', 'min-w', $separator: '-');
}

.max-w {
  @include modifiers($spaces, 'max-width', 'max-w', $separator: '-');
}

.min-h {
  @include modifiers($spaces, 'min-height', 'min-h', $separator: '-');
}

.max-h {
  @include modifiers($spaces, 'max-height', 'max-h', $separator: '-');
}

// https://gist.github.com/andrejsharapov/965535fc37eec426af1c6c4f2d05397b
@mixin mq($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (min-width: #{map-get($breakpoints, $breakpoint)}) {
      @content;
    }
  }
}
